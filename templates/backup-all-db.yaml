{{- if .Values.backupJob.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: singlestore-backup
  namespace: {{ .Values.namespace }}
spec:
  schedule: "{{ .Values.backupJob.schedule }}"  # Dynamic schedule from values.yaml
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: backup  # Using the backup service account
          containers:
          - name: backup
            image: bitnami/kubectl:latest
            command:
              - /bin/sh
              - -c
              - |
                # Fetch all user-created databases
                databases=$(kubectl exec node-sdb-cluster-master-0 -n {{ .Values.namespace }} -- \
                  /bin/bash -c "memsql -u {{ .Values.userCreation.rootUsername }} -p'{{ .Values.userCreation.rootPassword }}' -e 'SHOW DATABASES;' | grep -vE '^(information_schema|memsql|cluster)$' | tr -d ' '")

                # Loop through user databases and back them up
                for db in $databases; do
                  echo "Backing up database: $db"
                  timestamp=$(date +'%Y-%m-%d_%H-%M-%S')
                  backup_filename="${db}_${timestamp}"
                  backup_command="BACKUP DATABASE \"$db\" TO GCS '{{ .Values.backupJob.gcsPath }}/$backup_filename' CREDENTIALS '{\\\"access_id\\\": \\\"{{ .Values.backupJob.gcsCredentials.accessId }}\\\", \\\"secret_key\\\": \\\"{{ .Values.backupJob.gcsCredentials.secretKey }}\\\"}'"
                  echo "Executing: $backup_command"
                  kubectl exec node-sdb-cluster-master-0 -n {{ .Values.namespace }} -- \
                  /bin/bash -c "memsql -u {{ .Values.userCreation.rootUsername }} -p'{{ .Values.userCreation.rootPassword }}' -e \"$backup_command\""
                done
          restartPolicy: Never
      backoffLimit: 1
{{- end }}
